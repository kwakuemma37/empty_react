name: CI
on:
  pull_request:
    branches: [develop, master,main]
  push:
    branches: [develop, master,main]
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      SURGE_LOGIN: ${{secretes.SURGE_LOGIN}}
      SURGE_TOKEN: ${{secrets.SURGE_TOKEN}}
    steps:
      - uses: actions/checkout@v2
      - name: cache node_modules
        uses: actions/cache@v1
        with: 
          # paths: where caches is stored. different for various operating systems
          path: ~/.npm
          key: ${{runner.os}}-node-${{hashFiles('**/*package-lock.json')}}
          # restore-keys: 
      - name: Use NodeJS
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"
    
      - run: npm ci
      # - run: npm run format:check
      # - run: npm text -- --coverage
      #   env:
      #     CI: true
      - name: build project
        run: npm run build
      - name: upload build folder 
        uses: actions/upload-artifact@v1
        with: 
          name: build
          path: build
      - name: ZIP Assets
        if: github.event_name=='push' && github.ref== 'refs/heads/master'
        run: | # Since we're running the workflow on ubuntu we can use ZIP command to zip the build folder and coverage folder
          Zip -r build.zip ./build 
          ZIP -r coverage.zip ./coverage
      - name: create a release
        if: github.event_name== 'push' && github.ref=='refs/heads/master' #only run this step if we push to master
        run: npm semantic-release
        env: 
          GITHUB_TOKEN:${{secrets.GITHUB_TOKEN}}
      - name: Deploy to production
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: npx surge -- project ./build --domain #domain generated by semantic release here
      - name: Upload coverage reports
        if: github.event_name=='push' && github.ref=='refs/heads/master'
        run: npx codecov
        env: 
          CODECOV_TOKEN:${{secrets.CODECOV_TOKEN}}
       

  